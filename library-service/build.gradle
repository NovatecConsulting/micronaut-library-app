plugins {
    //id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.kotlin.kapt" version "1.3.50"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.50"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

version "0.1"
group "library.service"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor "io.micronaut.security:micronaut-security-annotations"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut.security:micronaut-security"
    implementation "io.micronaut.mongodb:micronaut-mongo-sync"

    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-validation"

    compile "io.micronaut:micronaut-http-server-netty"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut:micronaut-runtime"

    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"

    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"

    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"

    testCompile "io.micronaut.test:micronaut-test-junit5:1.1.2"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    testCompile "org.junit.jupiter:junit-jupiter-params:5.1.0"
    testCompile "de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.1"
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testCompile "org.jetbrains.spek:spek-api:${spekVersion}"
    testCompile "org.assertj:assertj-core:3.11.1"
    testCompile "javax.xml.bind:jaxb-api:2.3.0"
    testCompile "com.sun.xml.bind:jaxb-core:2.3.0"
    testCompile "com.sun.xml.bind:jaxb-impl:2.3.0"
    testCompile "org.hibernate:hibernate-validator:4.2.0.Final"
    testCompile "org.hibernate:hibernate-validator-annotation-processor:4.2.0.Final"
    testCompile "io.rest-assured:rest-assured:4.2.0"
    testCompile "org.skyscreamer:jsonassert:1.5.0"

    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"

}

test.classpath += configurations.developmentOnly

mainClassName = "library.service.Application"

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
        //kapt.includeCompileClasspath = false
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
        //kapt.includeCompileClasspath = false
    }
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
